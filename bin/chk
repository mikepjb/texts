#!/usr/bin/env bash
#
# chk, Check your computer is correctly configured, cleaned and setup for use.
#
# chk is a script that makes sure your current environment is setup for development use. It should be idempotent,
# meaning you can run it multiple times without changing the output.

set +e

################################################
# Config & Utility Functions                   #
################################################

WARN='\033[1;33m'
NC='\033[0m'
PACKER="$HOME/.local/share/nvim/site/pack/packer/start/packer.nvim"
XDG_CONFIG_HOME="$HOME/.config"
SCRIPT_DIR=$(dirname "$0")
CONFIG_DIR=$(dirname "$SCRIPT_DIR")

packages=(
  tmux
  neovim
  vim
  rg
  fd
  node
  sway
  dmenu
  ttf-nerd-fonts-symbols
  ttf-font-awesome
  jq
  nmap
  xdg-desktop-portal-wlr
  libreoffice
  ddcutil
  grim
  wl-clipboard
  nvtop
  xclip
  sqlite
  postgresql
)

aur_packages=(
  ttf-recursive
  clojure-lsp
  grimshot
)

home_items=(
  .bash_history
  .bash_profile
  .bashrc
  .gitconfig
  .notes
  .ssh
  Documents
  Downloads
  Music
  Pictures
  Videos
  VMs
  bin
  go
)

env_info() {
  echo "shell: $SHELL"
  echo "shell version: $(bash --version)"
}

join_by() { local IFS="$1"; shift; echo "$*"; }

ensure_exists() {
  backup_location="$HOME/Documents/.chk-backup-files"
  mkdir -p $backup_location
  [[ ! -L $2 ]] && mv $2 $backup_location # backup any 'real' files
  mkdir -p $(dirname $1) # ensure parent directory is created
  ln -sfv $1 $2 # refresh softlink so the reference is up to date.
}

################################################
# Main Functions                               #
################################################

git_config() {
  echo 'Configuring git..'
  git config --global --replace-all core.editor 'vim'
  git config --global --replace-all core.autocrlf false
  git config --global --replace-all alias.aa 'add --all'
  git config --global --replace-all alias.br 'branch --sort=committerdate'
  git config --global --replace-all alias.st 'status'
  git config --global --replace-all alias.count 'shortlog -sn'
  git config --global --replace-all alias.ff 'pull --ff-only'
  git config --global --replace-all alias.co 'checkout'
  git config --global --replace-all alias.ci 'commit --verbose'
  git config --global --replace-all alias.di 'diff'
  git config --global --replace-all alias.dc 'diff --cached'
  git config --global --replace-all alias.dd 'diff --stat origin/develop HEAD'
  git config --global --replace-all alias.dn 'diff --name-status'
  git config --global --replace-all alias.list 'config --global --list'
  git config --global --replace-all alias.amend 'commit --amend'
  git config --global --replace-all alias.ffa 'fetch --all && git rebase origin/master'
  git config --global --replace-all alias.push-new 'push -u origin HEAD'
  git config --global --replace-all alias.ra "log --abbrev-commit --pretty=format:'%<(7)%C(yellow)%h %Cgreen%<(15)%cr%C(bold cyan)%<(17)<%an>%C(red)%d %Creset %s'"
  printf "${WARN}Don't forget to set your user.name and user.email with git config --global user.name = <etc>${NC}\n"
}

dotfiles_setup() {
  echo 'Configuring dotfiles..'
  echo '. ~/.bashrc' > ~/.bash_profile

  # bash config
  ensure_exists $CONFIG_DIR/bashrc $HOME/.bashrc
  ensure_exists $CONFIG_DIR/tmux.conf $XDG_CONFIG_HOME/tmux/tmux.conf

  mkdir -p $HOME/.config/pg # postgres config directory
}

mac_deps() {
  brew install clojure-lsp/brew/clojure-lsp-native tree-sitter luajit neovim ripgrep fd tree openjdk@18 borkdude/brew/babashka jq harelba/q/q ranger cmus tig newsboat sox
  brew install --cask emacs
  brew install --cask libreoffice

  # mac os ncurses doesn't have the entry for tmux-256color so we download and set it manually.
  curl -LO https://invisible-island.net/datafiles/current/terminfo.src.gz && gunzip terminfo.src.gz
  sudo /usr/bin/tic -xe tmux-256color terminfo.src
}

js_deps() {
  # javascript/typescript use tsserver as an lsp client and can be installed as an npm package
  # you should install this in the project as a dev dep to have more accurate results but this is also good for odd .js
  # scripts.
  npm i -g typescript typescript-language-server
}

if [[ ! -d $PACKER ]]; then
    git clone --depth 1 https://github.com/wbthomason/packer.nvim $PACKER
fi

config() {
  # turn off mouse acceleration
  defaults write .GlobalPreferences com.apple.mouse.scaling -1
}

linux_config() {
  if [[ -f "$HOME/.config/sway/config" ]]; then
    echo 'sway config already exists'
  else
    mkdir -p $HOME/.config/sway
    ln -s $PWD/sway.config $HOME/.config/sway/config
  fi

  if [[ -f "$HOME/.config/foot/foot.ini" ]]; then
    echo 'foot config already exists'
  else
    mkdir -p $HOME/.config/foot
    ln -s $PWD/foot.ini $HOME/.config/foot/foot.ini
  fi

  if [[ -f "$HOME/.config/tofi/config" ]]; then
    echo 'tofi config already exists'
  else
    mkdir -p $HOME/.config/tofi
    ln -s $PWD/tofi.config $HOME/.config/tofi/config
  fi

  # append to /etc/systemd/logind.conf
  # HandlePowerKey=ignore
  # HandlePowerKeyLongPress=ignore
}

linux_packages() {
  sudo pacman -Syu
  sudo pacman -S --needed $(join_by ' ' "${packages[@]}")
  # yay doesn't seem to work well (scdoc can't do something because it can't
  # become root?
  # yay -S --needed $(join_by ' ' "${aur_packages[@]}")
  # check that this package does NOT exist due to a bug with wayland
  # it causes telegram/pavucontrol/wdisplays to take a long time to open,
  # though I am not sure why!
  # https://github.com/swaywm/sway/issues/7600
  pacman --query xdg-desktop-portal-gnome && sudo pacman -R xdg-desktop-portal-gnome
}

linux_services() {
  sudo systemctl enable ntpd # for time sync
}

golang_tools() {
  go install github.com/cosmtrek/air@latest
  go install golang.org/x/tools/cmd/goimports@latest
  go install golang.org/x/tools/gopls@latest
}

kondo() { # tidy home directory
  mkdir -p $HOME/.local/share
  mkdir -p $HOME/.local/state
  mkdir -p $HOME/.local/cache
  mkdir -p $HOME/.config

}

env_info
git_config
dotfiles_setup
js_deps
linux_config
linux_packages
linux_services
golang_tools
